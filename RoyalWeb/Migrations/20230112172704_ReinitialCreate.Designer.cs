// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoyalWeb.Data;

#nullable disable

namespace RoyalWeb.Migrations
{
    [DbContext(typeof(RoyalContext))]
    [Migration("20230112172704_ReinitialCreate")]
    partial class ReinitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RoyalWeb.Models.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CharacterId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("Alive")
                        .HasColumnType("bit");

                    b.Property<int>("Appearance")
                        .HasColumnType("int");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourtId")
                        .HasColumnType("int");

                    b.Property<int>("Extrovertness")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("Honor")
                        .HasColumnType("int");

                    b.Property<int?>("HouseId")
                        .HasColumnType("int");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<int>("Reputation")
                        .HasColumnType("int");

                    b.Property<int>("Sexuality")
                        .HasColumnType("int");

                    b.HasKey("CharacterId");

                    b.HasIndex("CourtId");

                    b.HasIndex("HouseId");

                    b.ToTable("Character", (string)null);
                });

            modelBuilder.Entity("RoyalWeb.Models.Court", b =>
                {
                    b.Property<int>("CourtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourtId"));

                    b.Property<string>("CourtName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonarchCharacterId")
                        .HasColumnType("int");

                    b.Property<int>("PalaceId")
                        .HasColumnType("int");

                    b.HasKey("CourtId");

                    b.HasIndex("MonarchCharacterId");

                    b.HasIndex("PalaceId");

                    b.ToTable("Court", (string)null);
                });

            modelBuilder.Entity("RoyalWeb.Models.DailyEvent", b =>
                {
                    b.Property<int>("DailyEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DailyEventId"));

                    b.Property<string>("DailyEventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DailyEventId");

                    b.ToTable("DailyEvent", (string)null);
                });

            modelBuilder.Entity("RoyalWeb.Models.Holding", b =>
                {
                    b.Property<int>("HoldingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HoldingId"));

                    b.Property<string>("HoldingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HoldingId");

                    b.ToTable("Holding", (string)null);
                });

            modelBuilder.Entity("RoyalWeb.Models.House", b =>
                {
                    b.Property<int>("HouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HouseId"));

                    b.Property<int>("FamilyHonor")
                        .HasColumnType("int");

                    b.Property<string>("HouseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HouseId");

                    b.ToTable("House", (string)null);
                });

            modelBuilder.Entity("RoyalWeb.Models.Interaction", b =>
                {
                    b.Property<int>("InteractionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InteractionId"));

                    b.Property<int>("InteractionHolder1CharacterId")
                        .HasColumnType("int");

                    b.Property<int?>("InteractionHolder2CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("InteractionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InteractionId");

                    b.HasIndex("InteractionHolder1CharacterId");

                    b.HasIndex("InteractionHolder2CharacterId");

                    b.ToTable("Interaction");
                });

            modelBuilder.Entity("RoyalWeb.Models.MemoryRC", b =>
                {
                    b.Property<int>("MemoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemoryId"));

                    b.Property<int?>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int?>("ConnectedInteractionInteractionId")
                        .HasColumnType("int");

                    b.Property<string>("MemoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemoryId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("ConnectedInteractionInteractionId");

                    b.ToTable("MemoryRC");
                });

            modelBuilder.Entity("RoyalWeb.Models.Opinion", b =>
                {
                    b.Property<int>("OpinionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OpinionId"));

                    b.Property<int>("OpinionHolderCharacterId")
                        .HasColumnType("int");

                    b.Property<string>("OpinionOf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OpinionValue")
                        .HasColumnType("int");

                    b.HasKey("OpinionId");

                    b.HasIndex("OpinionHolderCharacterId");

                    b.ToTable("Opinion", (string)null);
                });

            modelBuilder.Entity("RoyalWeb.Models.Palace", b =>
                {
                    b.Property<int>("PalaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PalaceId"));

                    b.Property<string>("PalaceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PalaceId");

                    b.ToTable("Palace", (string)null);
                });

            modelBuilder.Entity("RoyalWeb.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int?>("PalaceId")
                        .HasColumnType("int");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.HasIndex("PalaceId");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("RoyalWeb.Models.Title", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleId"));

                    b.Property<int?>("HoldingId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerCharacterId")
                        .HasColumnType("int");

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TitleId");

                    b.HasIndex("HoldingId");

                    b.HasIndex("OwnerCharacterId");

                    b.ToTable("Title", (string)null);
                });

            modelBuilder.Entity("RoyalWeb.Models.WeeklyEvent", b =>
                {
                    b.Property<int>("WeeklyEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WeeklyEventId"));

                    b.Property<string>("WeeklyEventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WeeklyEventId");

                    b.ToTable("WeeklyEvent", (string)null);
                });

            modelBuilder.Entity("RoyalWeb.Models.YearlyEvent", b =>
                {
                    b.Property<int>("YearlyEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YearlyEventId"));

                    b.Property<string>("YearlyEventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YearlyEventId");

                    b.ToTable("YearlyEvent", (string)null);
                });

            modelBuilder.Entity("RoyalWeb.Models.Character", b =>
                {
                    b.HasOne("RoyalWeb.Models.Court", null)
                        .WithMany("Subjects")
                        .HasForeignKey("CourtId");

                    b.HasOne("RoyalWeb.Models.House", "House")
                        .WithMany("FamilyMembers")
                        .HasForeignKey("HouseId");

                    b.Navigation("House");
                });

            modelBuilder.Entity("RoyalWeb.Models.Court", b =>
                {
                    b.HasOne("RoyalWeb.Models.Character", "Monarch")
                        .WithMany()
                        .HasForeignKey("MonarchCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoyalWeb.Models.Palace", "Palace")
                        .WithMany()
                        .HasForeignKey("PalaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Monarch");

                    b.Navigation("Palace");
                });

            modelBuilder.Entity("RoyalWeb.Models.Interaction", b =>
                {
                    b.HasOne("RoyalWeb.Models.Character", "InteractionHolder1")
                        .WithMany()
                        .HasForeignKey("InteractionHolder1CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoyalWeb.Models.Character", "InteractionHolder2")
                        .WithMany()
                        .HasForeignKey("InteractionHolder2CharacterId");

                    b.Navigation("InteractionHolder1");

                    b.Navigation("InteractionHolder2");
                });

            modelBuilder.Entity("RoyalWeb.Models.MemoryRC", b =>
                {
                    b.HasOne("RoyalWeb.Models.Character", null)
                        .WithMany("Memories")
                        .HasForeignKey("CharacterId");

                    b.HasOne("RoyalWeb.Models.Interaction", "ConnectedInteraction")
                        .WithMany()
                        .HasForeignKey("ConnectedInteractionInteractionId");

                    b.Navigation("ConnectedInteraction");
                });

            modelBuilder.Entity("RoyalWeb.Models.Opinion", b =>
                {
                    b.HasOne("RoyalWeb.Models.Character", "OpinionHolder")
                        .WithMany("Opinions")
                        .HasForeignKey("OpinionHolderCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OpinionHolder");
                });

            modelBuilder.Entity("RoyalWeb.Models.Room", b =>
                {
                    b.HasOne("RoyalWeb.Models.Palace", null)
                        .WithMany("Rooms")
                        .HasForeignKey("PalaceId");
                });

            modelBuilder.Entity("RoyalWeb.Models.Title", b =>
                {
                    b.HasOne("RoyalWeb.Models.Holding", "Holding")
                        .WithMany()
                        .HasForeignKey("HoldingId");

                    b.HasOne("RoyalWeb.Models.Character", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerCharacterId");

                    b.Navigation("Holding");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("RoyalWeb.Models.Character", b =>
                {
                    b.Navigation("Memories");

                    b.Navigation("Opinions");
                });

            modelBuilder.Entity("RoyalWeb.Models.Court", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("RoyalWeb.Models.House", b =>
                {
                    b.Navigation("FamilyMembers");
                });

            modelBuilder.Entity("RoyalWeb.Models.Palace", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
